;; Player ;;

(defwidget player []
        (box    :orientation "v"
                :space-evenly "false"
        (box    :space-evenly "false"

        (button :class "player-close"
                :onclick "~/bin/player" ""))
        (box    :class "musicart"
                :style "background-image: url('${cover}');" {art})
        (box    :class "musictitle" "${music3}${title}")
        (box    :class "musicartist" "${music2}${artist}")
        (box    :orientation "h"
                :halign "center"
                :class "musicbtn"
                :space-evenly "false"
        (button :onclick "playerctl previous" "")
        (button :onclick "playerctl play-pause" music_status)
        (button :onclick "playerctl next" ""))
        (box    :orientation "h"
                :class "music-slider"
                :space-evenly "false"
                :halign "center"
        (scale  :min 0
                :max 101
                :value {musicpos}
                :active "false"))
        (box    :orientation "h"
                :halign "center"
                :class "power-up"
                :space-evenly "false"
        (button :class "player-up"
                :onclick "~/.config/eww/scripts/musicplayer" ""))))

;; calendar ;;

(defwidget calendar_full []
        (box    :orientation "v"
                :halign "center"
                :space-evenly "false"
        (box    :class "calendar_title" "     ${day}, ${number_day} ${month_full} ${year_full}")
        (box    :class "calendar" (calendar
                :show-details "true"))))

;; Search

(defwidget search_full []
      (box      :orientation "h"
                :space-evenly "true"
      (button   :class "search-full"
                :onclick "~/.config/rofi/script/launcher" "")))
;; Power ;;

(defwidget power_full []
      (box      :orientation "h"
                :space-evenly "true"
      (button   :class "power-full"
                :onclick "~/.config/rofi/script/shutdown"
                :timeout "60s" "")))

;; Reboot ;;

(defwidget reboot_full []
      (box      :orientation "h"
                :space-evenly "true"
      (button   :class "reboot-full"
                :onclick "~/.config/rofi/script/reboot"
                :timeout "60s" "")))

;; Lock ;;

(defwidget lock_full []
      (box      :orientation "h"
                :space-evenly "true"
      (button   :class "lock-full"
                :onclick "~/.config/rofi/script/lockscreen"
                :timeout "60s" "")))

;; Suspend ;;

(defwidget suspend_full []
      (box      :orientation "h"
                :space-evenly "true"
      (button   :class "suspend-full"
                :onclick "~/.config/rofi/script/suspend"
                :timeout "60s" "")))

;; Logout Full ;;

(defwidget logout_full []
      (box      :orientation "h"
                :space-evenly "true"
      (button   :class "logout-full"
                :onclick "~/.config/rofi/script/logout"
                :timeout "60s" "")))

;; Close Full ;;

(defwidget close_full []
      (box      :orientation "h"
                :space-evenly "true"
      (button   :class "power-full"
                :onclick "~/bin/dashboard" "")))

;; Profile ;;

(defwidget profile []
    (box        :orientation "v"
                :space-evenly "false"
                :class "profile"
    (box        :orientation "h"
                :space-evenly "false"
    (box        :class "pfp"))
    (box        :orientation "v"
                :space-evenly "false"
    (box        :class "pfptxt"
                :valign "center" "Shridal")
    (box        :class "subpfptxt"
                :halign "center" "I use Arch BTW"))))

;; Weather ;;

(defwidget weather []
    (box        :orientation "v"
                :space-evenly "false"
    (box        :orientation "h"
                :space-evenly "false"
    (box        :class "weather-icon"
                :style "color: ${weather-hex}" {weather-icon})
    (box        :class "temperature" "${temperature}  "))
    (box        :orientation "v"
                :space-evenly "false"
    (box        :class "weather-stat" {weather-stat})
    (box        :class "weather-quote-head" {weather-quote})
    (box        :class "weather-quote-tail" {weather-quote2}))))

;; HOME DIR ;;

(defwidget home_dir []
    (box        :orientation "v"
                :space-evenly "true"
                :class "home-dir"
    (button     :class "l1"
                :onclick "(dolphin ~/${l1})" {l1-processed})
    (button     :class "l2"
                :onclick "(dolphin ~/${l2})" {l2-processed})
    (button     :class "l3"
                :onclick "(dolphin ~/${l3})" {l3-processed})
    (button     :class "l4"
                :onclick "(dolphin ~/${l4})" {l4-processed})
    (button     :class "l5"
                :onclick "(dolphin ~/${l5})" {l5-processed})
    (button     :class "l6"
                :onclick "(dolphin ~/${l6})" {l6-processed})))

;; Quote ;;

(defwidget quote []
    (box        :orientation "v"
                :space-evenly "false"
                :class "quote-box"
    (label      :class "quote-main"
                :halign "start"
                :text "${quote}${quote-gen}"
                :wrap "true" :width 25)
    (label      :class "quote-tail"
                :halign "start"
                :text {quote-tail}
                :wrap "true" :width 25)
    (label      :class "quote-author"
                :text "- ${author-quote}"
                :halign "end")))

;; Screenshot ;;

(defwidget screenshot []
    (box        :orientation "v"
                :space-evenly "true"
    (button     :class "screenshot-icon"
                :onclick "msclip -c"
                :timeout 600 "")))

;; VPN ;;

(defwidget vpn []
    (box        :orientation "v"
                :space-evenly "true"
    (button     :class "vpn-icon"
                :onclick "~/.config/eww/scripts/vpntoggle"
                :style "color: ${vpn-hex}" "嬨${getvpnstat}")))

;; Do Not Disturb ;;

(defwidget donotdisturb []
    (box        :orientation "v"
                :space-evenly "true"
                :halign "center"
    (button     :class "disturb-icon"
                :onclick "~/bin/do_not_disturb.sh"
                :style "color: ${disturb-hex}" "⏾")))

;; Blur Full ;;

(defwidget blur_full []
    (box        :class "dashboard-background"
                :orientation "v"
                :space-evenly "true"))



;; (defwidget powermenu []
;; (box :orientation "h" :halign "center" :class "sysbtn" :space-evenly "true"
;; (button :class "shutdown-side" :onclick "~/.config/eww/scripts/shutdown.sh" :timeout 600 "")
;; (button :class "reboot-side" :onclick "~/.config/eww/scripts/reboot.sh" :timeout 600 "")
;; (button :class "lock-side" :onclick "~/.config/eww/scripts/lockscreen.sh" :timeout 600 "")
;; (button :class "suspend-side" :onclick "~/.config/eww/scripts/suspend.sh" :timeout 600 "")
;; (button :class "logout-side" :onclick "~/.config/eww/scripts/logout.sh" :timeout 600 "")
;; (button :class "lock-side" :onclick "exec ~/bin/eww close powermenu" "")
;;)
;;)


    ;; Main Stuff
    ;; (defwindow calendar_full
    ;;		    :geometry (geometry :x "505px" :y "100px" :width "690px" :height "100px")

				;;
;;
;; (calendar_full)
;;
;;)
    (defwindow search_full
			    :geometry (geometry :x "173px" :y "534px" :width "100px" :height "110px")
			     				(search_full))
    (defwindow power_full
			    :geometry (geometry :x "1093px" :y "124px" :width "100px" :height "100px")
			     				(power_full))
     (defwindow reboot_full
			    :geometry (geometry :x "1093px" :y "229px" :width "100px" :height "100px")
			     				(reboot_full))
     (defwindow lock_full
			    :geometry (geometry :x "1093px" :y "334px" :width "100px" :height "100px")
			     				(lock_full))
     (defwindow suspend_full
			    :geometry (geometry :x "1093px" :y "439px" :width "100px" :height "100px")
			     				(suspend_full))
     (defwindow logout_full
			    :geometry (geometry :x "1093px" :y "544px" :width "100px" :height "100px")
			     				(logout_full))
     (defwindow close_full
			    :geometry (geometry :x "643px" :y "649px" :width "80px" :height "50px")
			     				(close_full))
     (defwindow player
			    :geometry (geometry :x "1056px" :y "304px" :width "300px" :height "424px")
			     				(player))
    (defwindow profile
			    :geometry (geometry :x "173px" :y "124px" :width "300px" :height "405px")
			     				(profile))
     (defwindow weather
			    :geometry (geometry :x "478px" :y "124px" :width "405px" :height "300px")
			     				(weather))
     (defwindow home_dir
			    :geometry (geometry :x "888px" :y "229px" :width "200px" :height "415px")
			     				(home_dir))
    (defwindow quote
			    :geometry (geometry :x "278px" :y "534px" :width "605px" :height "110px")
			     				(quote))
     (defwindow screenshot
			    :geometry (geometry :x "888px" :y "124px" :width "200px" :height "100px")
			     				(screenshot))
    (defwindow vpn-icon
			    :geometry (geometry :x "478px" :y "429px" :width "200px" :height "100px")
			     				(vpn))
    (defwindow disturb-icon
			    :geometry (geometry :x "683px" :y "429px" :width "200px" :height "100px")
			     				(donotdisturb))
    (defwindow blur_full
			    :geometry (geometry :x "0px" :y "0px" :width "100%" :height "100%")
      							(blur_full))


;; (defwindow powermenu :focusable "true"
;;		    :geometry (geometry :x "35%" :y "20%" :width "30%" :height "40%")
;;
;;
;;
;; (powermenu)
;;
;;)

